class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode curr = head;
        int count = 0;
        
        // Check if there are at least k nodes remaining
        while (curr != null && count < k) {
            curr = curr.next;
            count++;
        }
        
        if (count < k) return head; // Not enough nodes to reverse
        
        // Reverse k nodes
        ListNode prev = null, next = null;
        curr = head;
        count = 0;
        
        while (curr != null && count < k) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            count++;
        }
        
        // Recursively reverse next groups
        if (next != null) {
            head.next = reverseKGroup(next, k);
        }
        
        return prev; // prev is the new head after reversal
    }
}
